/* VERIABEL */
@import '../variables';

$init: px;
$trans: vw;

$xl: 1339.98;
$lg: 1199.98;
$md: 991.98;
$sm: 767.98;
$xs: 575.98;
$ss: 319.98;

$min_xl: 1440;
$min_lg: 1200;
$min_md: 992;
$min_sm: 768;
$min_xs: 576;
$min_ss: 320;

/* MEDIA */

@mixin max-to($media) {
	@if $media == xl {
		@media only screen and (max-width: $xl + $init) { @content; }
	}
	@else if $media == lg {
		@media only screen and (max-width: $lg + $init) { @content; }
	}
	@else if $media == md {
		@media only screen and (max-width: $md + $init) { @content; }
	}
	@else if $media == sm {
		@media only screen and (max-width: $sm + $init) { @content; }
	}
	@else if $media == xs {
		@media only screen and (max-width: $xs + $init) { @content; }
	}
	@else if $media == ss {
		@media only screen and (max-width: $ss + $init) { @content; }
	}
}

@mixin min-from($media) {
	@if $media == min_xl {
		@media only screen and (min-width: $min_xl + $init) { @content; }
	}
	@else if $media == min_lg {
		@media only screen and (min-width: $min_lg + $init) { @content; }
	}
	@else if $media == min_md {
		@media only screen and (min-width: $min_md + $init) { @content; }
	}
	@else if $media == min_sm {
		@media only screen and (min-width: $min_sm + $init) { @content; }
	}
	@else if $media == min_xs {
		@media only screen and (min-width: $min_xs + $init) { @content; }
	}
	@else if $media == min_ss {
		@media only screen and (min-width: $min_ss + $init) { @content; }
	}
}

@include max-to(xl) {}
@include max-to(lg) {}
@include max-to(md) {}
@include max-to(sm) {}
@include max-to(xs) {}
@include max-to(ss) {}

@include min-from(min_xl) {}
@include min-from(min_lg) {}
@include min-from(min_md) {}
@include min-from(min_sm) {}
@include min-from(min_xs) {}
@include min-from(min_ss) {}

/* FONTS */

@mixin fontface($name, $file, $weight, $style){
	@font-face {
		font-family: "#{$name}";
		font-weight: $weight;
		font-style: $style;

		src: url('../fonts/#{$file}.eot');
		src: url('../fonts/#{$file}.eot?#iefix') format('embedded-opentype'),
				 url('../fonts/#{$file}.woff') format('woff'),
				 url('../fonts/#{$file}.ttf') format('truetype'),
				 url('../fonts/#{$file}.svg?#webfont') format('svg');
	}
}

@mixin absolute-c($top,$right,$bottom,$left){
  position: absolute;
  top: $top;
  bottom: $bottom;
  left: $left;
  right: $right;
  margin: auto;
}